name: Flutter Build Pipeline

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  FLUTTER_VERSION: "3.29.3"  # Version stable recommandée

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      # Étape 1: Checkout du code
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Étape 2: Setup Java (requis pour Android)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Étape 3: Setup Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable
          cache: true

      # Étape 4: Nettoyage et création projet Android
      - name: Clean and regenerate Android
        run: |
          # Sauvegarde des fichiers essentiels
          mkdir _temp_backup
          cp -r lib pubspec.yaml _temp_backup/
          
          # Recréation complète du projet
          flutter create --platforms android --org com.example --project-name caldec .
          
          # Restauration des fichiers
          rm -rf lib
          mv _temp_backup/lib .
          mv _temp_backup/pubspec.yaml .
          rm -rf _temp_backup
          
          # Vérification structure
          [ -f "android/app/build.gradle" ] || exit 1

      # Étape 5: Installation dépendances
      - name: Get dependencies
        run: flutter pub get

      # Étape 6: Build APK
      - name: Build release APK
        run: |
          flutter clean
          flutter build apk --release --verbose
          ls -la build/app/outputs/flutter-apk/

      # Étape 7: Upload artifact
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: caldec-release
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 7
